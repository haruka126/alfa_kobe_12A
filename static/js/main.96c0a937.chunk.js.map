{"version":3,"sources":["components/Footer.tsx","pages/Page404.tsx","components/LostPassword.tsx","components/ProductCard.tsx","components/TextAnimation.tsx","pages/PageAdmin.tsx","components/Login.tsx","pages/PageLoginAdmin.tsx","pages/PageMarket.tsx","components/Header.tsx","components/TopPageMain.tsx","pages/PageTop.tsx","route/PageRoute.tsx","App.tsx","index.tsx"],"names":["Footer","height","backgroundColor","h","flexDirection","pos","bottom","size","color","Page404","as","LostPassword","pathname","useLocation","to","ProductCard","adminMode","margin","onClickDelete","useState","deleted","setDeleted","property","Error","m","maxW","borderWidth","borderRadius","overflow","src","alt","p","d","justifyContent","alignItems","px","colorScheme","onClick","aria-label","icon","Close","mt","fontWeight","lineHeight","isTruncated","Array","fill","map","_","i","Star","ml","fontSize","TextAnimation","text","duration","setAnimation","useCallback","gsap","value","delimiter","ease","useEffect","registerPlugin","TextPlugin","className","PageAdmin","Login","userName","password","input_user_id","setUserId","input_password","setInputPassword","login_complete","setLoginComplete","show_pas","setShowPas","is_loading","setIsLoading","toast","useToast","location","query","URLSearchParams","search","valid_user_name","String","fromCharCode","valid_password","convertToValid","correct_user_name","correct_password","get","align","justify","w","boxShadow","spacing","isRequired","type","variant","onChange","event","target","width","ViewOffIcon","ViewIcon","setTimeout","title","status","isClosable","position","description","isLoading","PageLogin","PageMarket","top","Header","imageUrl","bgImage","bgSize","TopPageMain","history","useHistory","my","push","PageTop","PageRoute","exact","path","component","render","url","match","App","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96c0a937.chunk.js","sourcesContent":["import { Center, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n    height: string;\n    backgroundColor: string;\n};\n\nexport const Footer: React.VFC<Props> = ({ height, backgroundColor }) => {\n    return (\n        <Center h={height} backgroundColor={backgroundColor}>\n            <Center flexDirection=\"column\" pos=\"absolute\" bottom={0}>\n                <Text size=\"14px\" color=\"gray\">「リアル脱出ゲーム」は株式会社のSCRAPの登録商標です</Text>\n                <Text size=\"14px\" color=\"gray\">Copyright &copy; 2021 12年A組</Text>\n            </Center>\n        </Center>\n    );\n};\n","import { Text } from \"@chakra-ui/react\";\nimport { Footer } from \"../components/Footer\";\n\nexport const Page404 = () => {\n    return (\n        <>\n            <Text as=\"h1\">お探しのページが見つかりません。</Text>\n            <Footer height=\"15vh\" backgroundColor=\"#e7e7e7\" />\n        </>\n    );\n};\n","import { Link, useLocation } from \"react-router-dom\";\n\nexport const LostPassword: React.VFC = () => {\n    const { pathname } = useLocation();\n    return (\n        <>\n            <p>ユーザー名はMichaelでパスワードはJacksonです。</p>\n            <Link to={pathname}>ログインに戻る。</Link>\n        </>\n    );\n};\n","import { CloseIcon, StarIcon } from \"@chakra-ui/icons\"\nimport { Badge, Box, IconButton, Image } from \"@chakra-ui/react\"\nimport { useState } from \"react\"\n\ntype Props = {\n    adminMode?: boolean;\n    margin?: string;\n    onClickDelete?: Function | null;\n};\n\nexport const ProductCard: React.VFC<Props> = ({ adminMode = false, margin = \"\", onClickDelete = null }) => {\n\n    const [deleted, setDeleted] = useState(false);\n\n    const property = {\n        imageUrl: \"https://unsplash.it/382/255\",\n        imageAlt: \"\",\n        title: \"あなたのゲームデータ\",\n        formattedPrice: \"¥30,000\",\n        likeCount: 26,\n        rating: 4,\n    };\n\n    if (deleted) {\n        if (onClickDelete !== null)\n            return onClickDelete();\n        else\n            throw new Error(\"You need to pass onClickDelete as an argument!\");\n    }\n    else {\n        return (\n            <Box m={margin} maxW=\"xs\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n                <Image src={property.imageUrl} alt={property.imageAlt} />\n        \n                <Box p=\"6\">\n                    <Box d=\"flex\" justifyContent=\"space-between\" alignItems=\"baseline\">\n                        <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n                        New\n                        </Badge>\n                        { adminMode &&\n                        <IconButton onClick={() => setDeleted(true) } aria-label=\"Delete this product\" icon={<CloseIcon />} />\n                        }\n                    </Box>\n            \n                    <Box\n                        mt=\"1\"\n                        fontWeight=\"semibold\"\n                        as=\"h4\"\n                        lineHeight=\"tight\"\n                        isTruncated\n                    >\n                        {property.title}\n                    </Box>\n            \n                    <Box>\n                        {property.formattedPrice}\n                    </Box>\n            \n                    <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n                        {Array(5)\n                        .fill(\"\")\n                        .map((_, i) => (\n                            <StarIcon\n                            key={i}\n                            color={i < property.rating ? \"teal.500\" : \"gray.300\"}\n                            />\n                        ))}\n                        <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n                            {property.likeCount} likes\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        );\n    }\n};\n","import { Text } from '@chakra-ui/layout';\nimport { gsap } from 'gsap'\nimport { TextPlugin } from 'gsap/TextPlugin'\nimport { useCallback, useEffect } from 'react';\n\ntype Props = {\n    text: string;\n    duration: number; // 秒\n};\n\nexport const TextAnimation: React.VFC<Props> = ({ text, duration }) => {\n    const setAnimation = useCallback(() => {\n        gsap.to(\".ret\", {\n            duration: duration,\n            text: {\n              value: text,\n              delimiter: \"\",\n            },\n            ease: \"none\"\n        });\n    // eslint-disable-next-line react-hooks/exhaustive-deps      \n    }, []);\n\n    useEffect(() => {\n        gsap.registerPlugin(TextPlugin);\n        setAnimation();\n    // eslint-disable-next-line react-hooks/exhaustive-deps      \n    }, []);\n\n    return <Text className=\"ret\" />;\n};\n","import { Box } from \"@chakra-ui/react\";\nimport { ProductCard } from \"../components/ProductCard\";\nimport { TextAnimation } from \"../components/TextAnimation\";\n\nexport const PageAdmin: React.VFC = () => {\n    return (\n        <>\n            <Box h=\"100vh\" d=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <ProductCard adminMode onClickDelete={() => \n                    <TextAnimation text=\"あなたのゲームデータは守られました！\" duration={2} />\n                } />\n            </Box>\n            {/* PageLoginAdmin内なのでFooterが2重にならないよう、Footerを呼ばないように */}\n        </>\n    );\n};\n","import { Box, Input, Stack, Button, Flex, FormLabel, FormControl, useToast, InputGroup, InputRightElement, Icon } from \"@chakra-ui/react\";\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\nimport { ChangeEvent, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { LostPassword } from \"./LostPassword\";\nimport { PageAdmin } from \"../pages/PageAdmin\";\n\ntype Props = {\n    // 数値配列で受け取り、それを文字列に変換する。\n    userName: number[];\n    password: number[];\n};\n\nexport const Login: React.VFC<Props> = ({ userName, password }) => {\n    const [input_user_id, setUserId] = useState(\"\");\n    const [input_password, setInputPassword] = useState(\"\");\n    const [login_complete, setLoginComplete] = useState(false);\n    const [show_pas, setShowPas] = useState(false);\n    const [is_loading, setIsLoading] = useState(false);\n\n    const toast = useToast();\n\n    const location = useLocation();\n    const query = new URLSearchParams(location.search);\n\n    // 数値配列を文字列に変換\n    const convertToValid = (userName: number[], password: number[]) => {\n        const valid_user_name = String.fromCharCode(...userName);\n        const valid_password = String.fromCharCode(...password);\n        return { valid_user_name, valid_password };\n    };\n\n    const \n    { valid_user_name: correct_user_name\n    , valid_password: correct_password\n    } = convertToValid(userName, password);\n\n    const onChangeUserId = (event: ChangeEvent<HTMLInputElement>) => \n        setUserId(event.target.value);\n\n    const onChangePassword = (event: ChangeEvent<HTMLInputElement>) => \n        setInputPassword(event.target.value);\n\n    const onClickSubmit = () => {\n        setIsLoading(true);\n        setTimeout(() => {\n            setIsLoading(false);\n            if (input_user_id === correct_user_name && input_password === correct_password) {\n                toast({\n                    title: \"ログイン成功。\",\n                    status: \"success\",\n                    isClosable: true,\n                    duration: 3000,\n                    position: \"top\"\n                });\n                setLoginComplete(true);\n            }\n            else {\n                toast({\n                    title: \"ログイン失敗。\",\n                    description: \"ユーザー名またはパスワードが正しくありません。\",\n                    status: \"error\",\n                    isClosable: true,\n                    duration: 3000,\n                    position: \"top\"\n                });\n            }\n        }, 500);\n    };\n\n    if (query.get(\"action\") === \"lostpassword\")\n        return <LostPassword />;\n    else if (login_complete)\n        return <PageAdmin />\n    else {\n        return (\n            <Flex align=\"center\" justify=\"center\" height=\"100vh\">\n                <Box w=\"sm\" p={8} borderWidth={1} borderRadius={8} boxShadow=\"lg\">\n                    <Stack spacing={6} px={8}>\n                        <FormControl isRequired>\n                            <FormLabel type=\"text\" fontSize=\"sm\">ユーザ名</FormLabel>\n                            <Input type=\"\" variant=\"outline\" value={input_user_id} onChange={onChangeUserId} />\n                        </FormControl>\n                        <FormControl isRequired>\n                            <FormLabel fontSize=\"sm\">パスワード</FormLabel>\n                            <InputGroup>\n                                <Input type={show_pas ? \"text\" : \"password\"} variant=\"outline\" value={input_password} onChange={onChangePassword}/>\n                                <InputRightElement width=\"3rem\">\n                                    <Button h=\"1.5rem\" size=\"sm\" onClick={() => setShowPas(!show_pas)}>\n                                        {show_pas ? <Icon as={ViewOffIcon} /> : <Icon as={ViewIcon} />}\n                                    </Button>\n                                </InputRightElement>\n                            </InputGroup>\n                        </FormControl>\n                        <Button colorScheme=\"teal\" type=\"submit\" onClick={onClickSubmit} isLoading={is_loading}>ログイン</Button>\n                        <Link to={`${location.pathname}?action=lostpassword`}>パスワードをお忘れですか？</Link>\n                    </Stack>\n                </Box>\n            </Flex>\n        );\n    }\n\n};\n","import { Login } from \"../components/Login\";\nimport { Footer } from \"../components/Footer\";\n\nexport const PageLogin: React.VFC = () => {\n    return (\n        <>\n            <Login userName={[77, 105, 99, 104, 97, 101, 108]} password={[74, 97, 99, 107, 115, 111, 110]} />\n            <Footer height=\"15vh\" backgroundColor=\"#e7e7e7\" />\n        </>\n    );\n};\n","import { Stack, Text } from \"@chakra-ui/react\";\nimport { Footer } from \"../components/Footer\";\nimport { ProductCard } from \"../components/ProductCard\";\n\nexport const PageMarket: React.VFC = () => {\n    return (\n        <>\n            <Stack h=\"100vh\" d=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Text d=\"\" top=\"0\">管理者の方はURLの末尾に/adminを追加してログインしてください。</Text>\n                <ProductCard />\n            </Stack>\n            <Footer height=\"15vh\" backgroundColor=\"#e7e7e7\" />\n        </>\n    );\n};\n","import { Box } from \"@chakra-ui/react\";\n\ntype Props = {\n    height: string;\n    imageUrl: string;\n};\n\nexport const Header: React.VFC<Props> = ({ height, imageUrl }) => {\n    return <Box h={height} bgImage={imageUrl} bgSize=\"cover\" />\n};\n","import { Button, Center, useToast, Stack, Container, Image } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const TopPageMain: React.VFC = () => {\n    const toast = useToast();\n    const history = useHistory();\n    return (\n        <Container w=\"80%\" my={10}>\n            <Center>\n                <Stack spacing={10}>\n                    <Image src=\"https://unsplash.it/1000/600\" alt=\"\" />\n                    <Image src=\"https://unsplash.it/1000/400\" alt=\"\" />\n                    <Image src=\"https://unsplash.it/1000/200\" alt=\"\" />\n                    <Center>\n                        <Button\n                        m=\"1rem 0\"\n                        size=\"lg\"\n                        p=\"2rem\"\n                        variant=\"outline\"\n                        colorScheme=\"teal\"\n                        onClick={() => {\n                            toast({\n                                title: \"ゲームデータが盗まれた！\",\n                                status: \"error\",\n                                duration: 4000,\n                                isClosable: true,\n                                position: \"top\"\n                            });\n                            history.push(\"/store\");\n                        }}>事前登録</Button>\n                    </Center>\n                </Stack>\n            </Center>\n        </Container>\n    );\n};\n","import { Footer } from \"../components/Footer\";\nimport { Header } from \"../components/Header\";\nimport { TopPageMain } from \"../components/TopPageMain\";\n\nexport const PageTop: React.VFC = () => {\n    return (\n        <>\n            <Header height=\"40vh\" imageUrl=\"https://unsplash.it/1000/500\" />\n            <TopPageMain />\n            <Footer height=\"15vh\" backgroundColor=\"#e7e7e7\" />\n        </>\n    );\n};\n","import { Switch, Route } from \"react-router-dom\";\nimport { Page404 } from \"../pages/Page404\";\nimport { PageLogin } from \"../pages/PageLoginAdmin\";\nimport { PageMarket } from \"../pages/PageMarket\";\nimport { PageTop } from \"../pages/PageTop\";\n\nexport const PageRoute: React.VFC = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={PageTop} />\n            <Route path=\"/store\" render={({ match: { url } }) => (\n                <Switch>\n                    <Route exact path={url} component={PageMarket} />\n                    <Route path={`${url}/admin`} component={PageLogin} />\n                </Switch>\n            )} />\n            <Route component={Page404} />\n        </Switch>\n    );\n};\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport { HashRouter } from \"react-router-dom\";\nimport { PageRoute } from \"./route/PageRoute\";\n\nexport const App: React.VFC = () => {\n    return (\n        <HashRouter basename=\"/alfa_kobe_12A\">\n            <ChakraProvider>\n                <PageRoute />\n            </ChakraProvider>\n        </HashRouter>\n    );\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}