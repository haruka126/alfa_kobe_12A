{"version":3,"sources":["pages/Page404.tsx","components/LostPassword.tsx","components/ProductCard.tsx","pages/PageAdmin.tsx","components/Login.tsx","pages/PageLoginAdmin.tsx","pages/PageMarket.tsx","components/Copyright.tsx","components/Footer.tsx","components/Header.tsx","components/TopPageMain.tsx","pages/PageTop.tsx","route/PageRoute.tsx","App.tsx","index.tsx"],"names":["Page404","as","LostPassword","pathname","useLocation","to","ProductCard","adminMode","margin","useState","deleted","setDeleted","property","m","maxW","borderWidth","borderRadius","overflow","src","alt","p","d","justifyContent","alignItems","px","colorScheme","onClick","aria-label","icon","Close","mt","fontWeight","lineHeight","isTruncated","Array","fill","map","_","i","Star","color","ml","fontSize","PageAdmin","h","Login","userName","password","input_user_id","setUserId","input_password","setInputPassword","login_complete","setLoginComplete","show_pas","setShowPas","is_loading","setIsLoading","toast","useToast","location","query","URLSearchParams","search","valid_user_name","String","fromCharCode","valid_password","convertToValid","correct_user_name","correct_password","get","align","justify","height","w","boxShadow","spacing","isRequired","type","variant","value","onChange","event","target","width","size","ViewOffIcon","ViewIcon","setTimeout","title","status","isClosable","duration","position","description","isLoading","PageLogin","PageMarket","top","Copyright","bottomJustify","children","pos","bottom","Footer","backgroundColor","enableCopyright","Header","imageUrl","bgImage","bgSize","TopPageMain","history","useHistory","my","push","PageTop","PageRoute","exact","path","component","render","url","match","App","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bd1ffae.chunk.js","sourcesContent":["import { Text } from \"@chakra-ui/react\";\n\nexport const Page404 = () => {\n    return <Text as=\"h1\">お探しのページが見つかりません。</Text>\n};\n","import { Link, useLocation } from \"react-router-dom\";\n\nexport const LostPassword: React.VFC = () => {\n    const { pathname } = useLocation();\n    return (\n        <>\n            <p>ユーザー名はMichaelでパスワードはJacksonです。</p>\n            <Link to={pathname}>ログインに戻る。</Link>\n        </>\n    );\n};\n","import { CloseIcon, StarIcon } from \"@chakra-ui/icons\"\nimport { Badge, Box, IconButton, Image } from \"@chakra-ui/react\"\nimport { useState } from \"react\"\n\ntype Props = {\n    adminMode?: boolean;\n    margin?: string;\n};\n\nexport const ProductCard: React.VFC<Props> = ({ adminMode = false, margin = \"\" }) => {\n    const [deleted, setDeleted] = useState(false);\n\n    const property = {\n        imageUrl: \"https://unsplash.it/382/255\",\n        imageAlt: \"\",\n        title: \"あなたのゲームデータ\",\n        formattedPrice: \"¥30,000\",\n        likeCount: 26,\n        rating: 4,\n    };\n\n    if (deleted)    \n        return <p>あなたのゲームデータは守られました！</p>;\n    else {\n        return (\n            <Box m={margin} maxW=\"xs\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n                <Image src={property.imageUrl} alt={property.imageAlt} />\n        \n                <Box p=\"6\">\n                    <Box d=\"flex\" justifyContent=\"space-between\" alignItems=\"baseline\">\n                        <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n                        New\n                        </Badge>\n                        { adminMode &&\n                        <IconButton onClick={() => setDeleted(true) } aria-label=\"Delete this product\" icon={<CloseIcon />} />\n                        }\n                    </Box>\n            \n                    <Box\n                        mt=\"1\"\n                        fontWeight=\"semibold\"\n                        as=\"h4\"\n                        lineHeight=\"tight\"\n                        isTruncated\n                    >\n                        {property.title}\n                    </Box>\n            \n                    <Box>\n                        {property.formattedPrice}\n                    </Box>\n            \n                    <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n                        {Array(5)\n                        .fill(\"\")\n                        .map((_, i) => (\n                            <StarIcon\n                            key={i}\n                            color={i < property.rating ? \"teal.500\" : \"gray.300\"}\n                            />\n                        ))}\n                        <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n                            {property.likeCount} likes\n                        </Box>\n                    </Box>\n                </Box>\n            </Box>\n        );\n    }\n};\n","import { Stack } from \"@chakra-ui/react\";\nimport { ProductCard } from \"../components/ProductCard\";\n\nexport const PageAdmin: React.VFC = () => {\n    return (\n        <Stack h=\"100vh\" d=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            <ProductCard adminMode />\n        </Stack>\n    );\n};\n","import { Box, Input, Stack, Button, Flex, FormLabel, FormControl, useToast, InputGroup, InputRightElement, Icon } from \"@chakra-ui/react\";\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\nimport { ChangeEvent, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { LostPassword } from \"./LostPassword\";\nimport { PageAdmin } from \"../pages/PageAdmin\";\n\ntype Props = {\n    // 数値配列で受け取り、それを文字列に変換する。\n    userName: number[];\n    password: number[];\n};\n\nexport const Login: React.VFC<Props> = ({ userName, password }) => {\n    const [input_user_id, setUserId] = useState(\"\");\n    const [input_password, setInputPassword] = useState(\"\");\n    const [login_complete, setLoginComplete] = useState(false);\n    const [show_pas, setShowPas] = useState(false);\n    const [is_loading, setIsLoading] = useState(false);\n\n    const toast = useToast();\n\n    const location = useLocation();\n    const query = new URLSearchParams(location.search);\n\n    // 数値配列を文字列に変換\n    const convertToValid = (userName: number[], password: number[]) => {\n        const valid_user_name = String.fromCharCode(...userName);\n        const valid_password = String.fromCharCode(...password);\n        return { valid_user_name, valid_password };\n    };\n\n    const \n    { valid_user_name: correct_user_name\n    , valid_password: correct_password\n    } = convertToValid(userName, password);\n\n    const onChangeUserId = (event: ChangeEvent<HTMLInputElement>) => \n        setUserId(event.target.value);\n\n    const onChangePassword = (event: ChangeEvent<HTMLInputElement>) => \n        setInputPassword(event.target.value);\n\n    const onClickSubmit = () => {\n        setIsLoading(true);\n        setTimeout(() => {\n            setIsLoading(false);\n            if (input_user_id === correct_user_name && input_password === correct_password) {\n                toast({\n                    title: \"ログイン成功。\",\n                    status: \"success\",\n                    isClosable: true,\n                    duration: 3000,\n                    position: \"top\"\n                });\n                setLoginComplete(true);\n            }\n            else {\n                toast({\n                    title: \"ログイン失敗。\",\n                    description: \"ユーザー名またはパスワードが正しくありません。\",\n                    status: \"error\",\n                    isClosable: true,\n                    duration: 3000,\n                    position: \"top\"\n                });\n            }\n        }, 500);\n    };\n\n    if (query.get(\"action\") === \"lostpassword\")\n        return <LostPassword />;\n    else if (login_complete)\n        return <PageAdmin />\n    else {\n        return (\n            <Flex align=\"center\" justify=\"center\" height=\"100vh\">\n                <Box w=\"sm\" p={8} borderWidth={1} borderRadius={8} boxShadow=\"lg\">\n                    <Stack spacing={6} px={8}>\n                        <FormControl isRequired>\n                            <FormLabel type=\"text\" fontSize=\"sm\">ユーザ名</FormLabel>\n                            <Input type=\"\" variant=\"outline\" value={input_user_id} onChange={onChangeUserId} />\n                        </FormControl>\n                        <FormControl isRequired>\n                            <FormLabel fontSize=\"sm\">パスワード</FormLabel>\n                            <InputGroup>\n                                <Input type={show_pas ? \"text\" : \"password\"} variant=\"outline\" value={input_password} onChange={onChangePassword}/>\n                                <InputRightElement width=\"3rem\">\n                                    <Button h=\"1.5rem\" size=\"sm\" onClick={() => setShowPas(!show_pas)}>\n                                        {show_pas ? <Icon as={ViewOffIcon} /> : <Icon as={ViewIcon} />}\n                                    </Button>\n                                </InputRightElement>\n                            </InputGroup>\n                        </FormControl>\n                        <Button colorScheme=\"teal\" type=\"submit\" onClick={onClickSubmit} isLoading={is_loading}>ログイン</Button>\n                        <Link to={`${location.pathname}?action=lostpassword`}>パスワードをお忘れですか？</Link>\n                    </Stack>\n                </Box>\n            </Flex>\n        );\n    }\n\n};\n","import { Login } from \"../components/Login\";\n\nexport const PageLogin: React.VFC = () => {\n    return <Login userName={[77, 105, 99, 104, 97, 101, 108]} password={[74, 97, 99, 107, 115, 111, 110]} />\n};\n","import { Stack, Text } from \"@chakra-ui/react\";\nimport { ProductCard } from \"../components/ProductCard\";\n\nexport const PageMarket: React.VFC = () => {\n    return (\n        <Stack h=\"100vh\" d=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            <Text d=\"\" top=\"0\">管理者の方はURLの末尾に/adminを追加してログインしてください。</Text>\n            <ProductCard />\n        </Stack>\n    );\n};\n","import { Text } from \"@chakra-ui/react\";\nimport { ReactNode } from \"react\";\n\ntype Props = {\n    fontSize: string;\n    color: string;\n    bottomJustify?: boolean;\n    children: ReactNode;\n};\n\nexport const Copyright: React.VFC<Props> = ({ fontSize, color, bottomJustify = false, children }) => {\n    return <Text \n    fontSize={fontSize}\n    color={color}\n    pos={bottomJustify ? \"absolute\" : \"static\"}\n    bottom={0}\n    >{children}</Text>;\n}","import { Box, Center } from \"@chakra-ui/react\";\nimport { Copyright } from \"./Copyright\";\n\ntype Props = {\n    height: string;\n    backgroundColor: string;\n    enableCopyright?: boolean;\n};\n\nexport const Footer: React.VFC<Props> = ({ height, backgroundColor, enableCopyright = false }) => {\n    return (\n        <Box h={height} backgroundColor={backgroundColor}>\n            { enableCopyright && \n            <Center>\n                <Copyright bottomJustify fontSize=\"14px\" color=\"gray\">Copyright &copy; 2021 12年A組</Copyright>\n            </Center>\n            }\n        </Box>\n    );\n};\n","import { Box } from \"@chakra-ui/react\";\n\ntype Props = {\n    height: string;\n    imageUrl: string;\n};\n\nexport const Header: React.VFC<Props> = ({ height, imageUrl }) => {\n    return <Box h={height} bgImage={imageUrl} bgSize=\"cover\" />\n};\n","import { Button, Center, useToast, Stack, Container, Image } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const TopPageMain: React.VFC = () => {\n    const toast = useToast();\n    const history = useHistory();\n    return (\n        <Container w=\"80%\" my={10}>\n            <Center>\n                <Stack spacing={10}>\n                    <Image src=\"https://unsplash.it/1000/600\" alt=\"\" />\n                    <Image src=\"https://unsplash.it/1000/400\" alt=\"\" />\n                    <Image src=\"https://unsplash.it/1000/200\" alt=\"\" />\n                    <Center>\n                        <Button\n                        m=\"1rem 0\"\n                        size=\"lg\"\n                        p=\"2rem\"\n                        variant=\"outline\"\n                        colorScheme=\"teal\"\n                        onClick={() => {\n                            toast({\n                                title: \"ゲームデータが盗まれた！\",\n                                status: \"error\",\n                                duration: 4000,\n                                isClosable: true,\n                                position: \"top\"\n                            });\n                            history.push(\"/store\");\n                        }}>事前登録</Button>\n                    </Center>\n                </Stack>\n            </Center>\n        </Container>\n    );\n};\n","import { Footer } from \"../components/Footer\";\nimport { Header } from \"../components/Header\";\nimport { TopPageMain } from \"../components/TopPageMain\";\n\nexport const PageTop: React.VFC = () => {\n    return (\n        <>\n            <Header height=\"40vh\" imageUrl=\"https://unsplash.it/1000/500\" />\n            <TopPageMain />\n            <Footer height=\"15vh\" backgroundColor=\"#e7e7e7\" enableCopyright />\n        </>\n    );\n};\n","import { Switch, Route } from \"react-router-dom\";\nimport { Page404 } from \"../pages/Page404\";\nimport { PageLogin } from \"../pages/PageLoginAdmin\";\nimport { PageMarket } from \"../pages/PageMarket\";\nimport { PageTop } from \"../pages/PageTop\";\n\nexport const PageRoute: React.VFC = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={PageTop} />\n            <Route path=\"/store\" render={({ match: { url } }) => (\n                <Switch>\n                    <Route exact path={url} component={PageMarket} />\n                    <Route path={`${url}/admin`} component={PageLogin} />\n                </Switch>\n            )} />\n            <Route component={Page404} />\n        </Switch>\n    );\n};\n","import { ChakraProvider } from \"@chakra-ui/react\";\nimport { HashRouter } from \"react-router-dom\";\nimport { PageRoute } from \"./route/PageRoute\";\n\nexport const App: React.VFC = () => {\n    return (\n        <HashRouter basename=\"/alfa_kobe_12A\">\n            <ChakraProvider>\n                <PageRoute />\n            </ChakraProvider>\n        </HashRouter>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}