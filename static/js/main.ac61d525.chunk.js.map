{"version":3,"sources":["components/Footer.tsx","pages/Page404.tsx","components/LostPassword.tsx","components/Login.tsx","assets/images/logo.png","components/MarketHeader.tsx","components/ProductCard.tsx","components/MarketMain.tsx","pages/PageDummyAdmin.tsx","pages/PageDummyLogin.tsx","pages/PageMarket.tsx","components/TextAnimation.tsx","components/GameClear.tsx","pages/PageRealAdmin.tsx","pages/PageRealLogin.tsx","pages/PageStory.tsx","components/Header.tsx","components/IndexMain.tsx","pages/PageIndex.tsx","pages/PageEpilogue.tsx","route/PageRoute.tsx","App.tsx","index.tsx"],"names":["Footer","height","backgroundColor","h","flexDirection","pos","bottom","size","color","Page404","as","LostPassword","pathname","useLocation","to","Login","userName","password","onLoginComplete","useState","input_user_id","setUserId","input_password","setInputPassword","login_complete","setLoginComplete","show_pas","setShowPas","is_loading","setIsLoading","toast","useToast","location","query","URLSearchParams","search","valid_user_name","String","fromCharCode","valid_password","convertToValid","correct_user_name","correct_password","get","align","justify","w","p","borderWidth","borderRadius","boxShadow","spacing","px","isRequired","type","fontSize","variant","value","onChange","event","target","width","onClick","ViewOffIcon","ViewIcon","colorScheme","setTimeout","title","status","isClosable","duration","position","description","isLoading","MarketHeader","adminMode","bgColor","py","src","logo","alt","cursor","alert","ProductCard","margin","onClickDelete","property","m","maxW","overflow","d","justifyContent","alignItems","aria-label","icon","Close","mt","fontWeight","lineHeight","isTruncated","Array","fill","map","_","i","Star","ml","MarketMain","direction","templateColumns","gap","placeItems","PageDummyAdmin","history","useHistory","push","PageDummyLogin","PageMarket","TextAnimation","children","onComplete","onCompleteCallback","useCallback","Ref","node","text","style","clientWidth","clientHeight","innerHTML","gsap","registerPlugin","TextPlugin","length","ease","ref","className","GameClear","fontFamily","isExternal","textAlign","PageRealAdmin","card_deleted","setCardDeleted","PageRealLogin","PageStory","Header","imageUrl","bgImage","bgSize","IndexMain","my","PageIndex","PageEpilogue","PageRoute","exact","path","component","render","url","match","App","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac61d525.chunk.js","sourcesContent":["import { Center, Text } from \"@chakra-ui/react\";\n\ntype Props = {\n    height: string;\n    backgroundColor: string;\n};\n\nexport const Footer: React.VFC<Props> = ({ height, backgroundColor }) => {\n    return (\n        <Center h={height} backgroundColor={backgroundColor}>\n            <Center flexDirection=\"column\" pos=\"absolute\" bottom={0}>\n                <Text size=\"14px\" color=\"gray\">「リアル脱出ゲーム」は株式会社のSCRAPの登録商標です</Text>\n                <Text size=\"14px\" color=\"gray\">Copyright &copy; 2021 12年A組</Text>\n            </Center>\n        </Center>\n    );\n};\n","import { Text } from \"@chakra-ui/react\";\nimport { Footer } from \"../components/Footer\";\n\nexport const Page404 = () => {\n    return (\n        <>\n            <Text as=\"h1\">お探しのページが見つかりません。</Text>\n            <Footer height=\"15vh\" backgroundColor=\"#e7e7e7\" />\n        </>\n    );\n};\n","import { Link, useLocation } from \"react-router-dom\";\n\nexport const LostPassword: React.VFC = () => {\n    const { pathname } = useLocation();\n    return (\n        <>\n            <p>ユーザー名はMichaelでパスワードはJacksonです。</p>\n            <p>二回目のログイン画面の場合は逆です。</p>\n            <Link to={pathname}>ログインに戻る。</Link>\n        </>\n    );\n};\n","import { Box, Input, Stack, Button, Flex, FormLabel, FormControl, useToast, InputGroup, InputRightElement, Icon } from \"@chakra-ui/react\";\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\nimport { ChangeEvent, useState } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { LostPassword } from \"./LostPassword\";\n\ntype Props = {\n    // 数値配列で受け取り、それを文字列に変換する。\n    userName: number[];\n    password: number[];\n    onLoginComplete: Function;\n};\n\nexport const Login: React.VFC<Props> = ({ userName, password, onLoginComplete }) => {\n    const [input_user_id, setUserId] = useState(\"\");\n    const [input_password, setInputPassword] = useState(\"\");\n    const [login_complete, setLoginComplete] = useState(false);\n    const [show_pas, setShowPas] = useState(false);\n    const [is_loading, setIsLoading] = useState(false);\n\n    const toast = useToast();\n\n    const location = useLocation();\n    const query = new URLSearchParams(location.search);\n\n    // 数値配列を文字列に変換\n    const convertToValid = (userName: number[], password: number[]) => {\n        const valid_user_name = String.fromCharCode(...userName);\n        const valid_password = String.fromCharCode(...password);\n        return { valid_user_name, valid_password };\n    };\n\n    const \n    { valid_user_name: correct_user_name\n    , valid_password: correct_password\n    } = convertToValid(userName, password);\n\n    const onChangeUserId = (event: ChangeEvent<HTMLInputElement>) => \n        setUserId(event.target.value);\n\n    const onChangePassword = (event: ChangeEvent<HTMLInputElement>) => \n        setInputPassword(event.target.value);\n\n    const onClickSubmit = () => {\n        setIsLoading(true);\n        setTimeout(() => {\n            setIsLoading(false);\n            if (input_user_id === correct_user_name && input_password === correct_password) {\n                toast({\n                    title: \"ログイン成功。\",\n                    status: \"success\",\n                    isClosable: true,\n                    duration: 3000,\n                    position: \"top\"\n                });\n                setLoginComplete(true);\n            }\n            else {\n                toast({\n                    title: \"ログイン失敗。\",\n                    description: \"ユーザー名またはパスワードが正しくありません。\",\n                    status: \"error\",\n                    isClosable: true,\n                    duration: 3000,\n                    position: \"top\"\n                });\n            }\n        }, 500);\n    };\n\n    if (query.get(\"action\") === \"lostpassword\")\n        return <LostPassword />;\n    else if (login_complete)\n        return onLoginComplete();\n    else {\n        return (\n            <Flex align=\"center\" justify=\"center\" height=\"100vh\">\n                <Box w=\"sm\" p={8} borderWidth={1} borderRadius={8} boxShadow=\"lg\">\n                    <Stack spacing={6} px={8}>\n                        <FormControl isRequired>\n                            <FormLabel type=\"text\" fontSize=\"sm\">ユーザ名</FormLabel>\n                            <Input type=\"\" variant=\"outline\" value={input_user_id} onChange={onChangeUserId} />\n                        </FormControl>\n                        <FormControl isRequired>\n                            <FormLabel fontSize=\"sm\">パスワード</FormLabel>\n                            <InputGroup>\n                                <Input type={show_pas ? \"text\" : \"password\"} variant=\"outline\" value={input_password} onChange={onChangePassword}/>\n                                <InputRightElement width=\"3rem\">\n                                    <Button h=\"1.5rem\" size=\"sm\" onClick={() => setShowPas(!show_pas)}>\n                                        {show_pas ? <Icon as={ViewOffIcon} /> : <Icon as={ViewIcon} />}\n                                    </Button>\n                                </InputRightElement>\n                            </InputGroup>\n                        </FormControl>\n                        <Button colorScheme=\"teal\" type=\"submit\" onClick={onClickSubmit} isLoading={is_loading}>ログイン</Button>\n                        <Link to={`${location.pathname}?action=lostpassword`}>パスワードをお忘れですか？</Link>\n                    </Stack>\n                </Box>\n            </Flex>\n        );\n    }\n\n};\n","export default __webpack_public_path__ + \"static/media/logo.ac61f79a.png\";","import { Image } from \"@chakra-ui/image\";\nimport { Box, Flex, Text } from \"@chakra-ui/layout\";\nimport logo from \"../assets/images/logo.png\";\n\ntype Props = {\n    height: string;\n    adminMode?: boolean;\n};\n\nexport const MarketHeader: React.VFC<Props> = ({ height, adminMode = false }) => {\n    return (\n        <Flex bgColor=\"#131921\" height={height} justify=\"space-between\">\n            <Image px=\"1rem\" py=\"4px\" src={logo} alt=\"logo\" />\n            { adminMode ||\n            <Box>\n                <Text color=\"white\" cursor=\"pointer\" onClick={() => {\n                    alert(\"URLの末尾に/dummyadminを追加してログインしてください。\")\n                }}>管理者の方へ</Text>\n            </Box>\n            }\n        </Flex>\n    );\n};\n","import { CloseIcon, StarIcon } from \"@chakra-ui/icons\"\nimport { Badge, Box, IconButton, Image } from \"@chakra-ui/react\"\n\ntype Props = {\n    adminMode?: boolean;\n    margin?: string;\n    onClickDelete?: React.MouseEventHandler<HTMLButtonElement>;\n};\n\nexport const ProductCard: React.VFC<Props> = ({ adminMode = false, margin = \"\", onClickDelete }) => {\n    const property = {\n        imageUrl: \"https://unsplash.it/382/255\",\n        imageAlt: \"\",\n        title: \"あなたのゲームデータ\",\n        formattedPrice: \"¥30,000\",\n        likeCount: 26,\n        rating: 4,\n    };\n\n    return (\n        <Box m={margin} maxW=\"xs\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n            <Image src={property.imageUrl} alt={property.imageAlt} />\n    \n            <Box p=\"6\">\n                <Box d=\"flex\" justifyContent=\"space-between\" alignItems=\"baseline\">\n                    <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n                    New\n                    </Badge>\n                    { adminMode &&\n                    <IconButton onClick={ onClickDelete } aria-label=\"Delete this product\" icon={<CloseIcon />} />\n                    }\n                </Box>\n        \n                <Box\n                    mt=\"1\"\n                    fontWeight=\"semibold\"\n                    as=\"h4\"\n                    lineHeight=\"tight\"\n                    isTruncated\n                >\n                    {property.title}\n                </Box>\n        \n                <Box>\n                    {property.formattedPrice}\n                </Box>\n        \n                <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n                    {Array(5)\n                    .fill(\"\")\n                    .map((_, i) => (\n                        <StarIcon\n                        key={i}\n                        color={i < property.rating ? \"teal.500\" : \"gray.300\"}\n                        />\n                    ))}\n                    <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n                        {property.likeCount} likes\n                    </Box>\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n","import { Center, Stack, Box, Grid } from \"@chakra-ui/layout\";\nimport { ProductCard } from \"./ProductCard\";\n\ntype Props = {\n    adminMode?: boolean;\n    onClickDelete?: Function;\n};\n\nexport const MarketMain: React.VFC<Props> = ({ adminMode = false, onClickDelete }) => {\n    return (\n        <Center h=\"100vh\" bgColor=\"#EAEDED\">\n        <Stack direction=\"column\">\n            <Center>\n                <Box w=\"80%\" p=\"2vw\" bgColor=\"white\" boxShadow=\"sm\">\n                    <Grid templateColumns=\"repeat(3, 1fr)\" gap={4} placeItems=\"center\">\n                        { adminMode ?\n                        <ProductCard adminMode onClickDelete={() => {\n                            if (onClickDelete)\n                                onClickDelete()\n                        }} /> :\n                        <ProductCard />\n                        }\n                    </Grid>\n                </Box>\n            </Center>\n        </Stack>\n        </Center> \n    );\n};\n","import { useToast } from \"@chakra-ui/toast\";\nimport { useHistory } from \"react-router\";\nimport { MarketHeader } from \"../components/MarketHeader\";\nimport { MarketMain } from \"../components/MarketMain\";\n\nexport const PageDummyAdmin: React.VFC = () => {\n    const toast = useToast();\n    const history = useHistory();\n\n    return (\n        <>\n            <MarketHeader height=\"6vh\" adminMode />\n            <MarketMain adminMode onClickDelete={() => {\n                toast({\n                    title: \"侵入者検知システムが作動してユーザ名とパスワードが変更させられてしまった！\",\n                    status: \"error\",\n                    duration: 4000,\n                    isClosable: true,\n                    position: \"top\"\n                });\n                history.push(\"/market/realadmin\");\n            }} />\n            {/* Footerが2重にならないよう、Footerを呼ばないように */}\n        </>\n    );\n};\n","import { Login } from \"../components/Login\";\nimport { Footer } from \"../components/Footer\";\nimport { PageDummyAdmin } from \"./PageDummyAdmin\";\n\nexport const PageDummyLogin: React.VFC = () => {\n    return (\n        <>\n            <Login userName={[77, 105, 99, 104, 97, 101, 108]} password={[74, 97, 99, 107, 115, 111, 110]} onLoginComplete={() =>\n                <PageDummyAdmin />\n            } />\n            <Footer height=\"15vh\" backgroundColor=\"#e7e7e7\" />\n        </>\n    );\n};\n","import { Footer } from \"../components/Footer\";\nimport { MarketHeader } from \"../components/MarketHeader\";\nimport { MarketMain } from \"../components/MarketMain\";\n\nexport const PageMarket: React.VFC = () => {\n    return (\n        <>\n            <MarketHeader height=\"6vh\" />\n            <MarketMain />\n            <Footer height=\"15vh\" backgroundColor=\"#e7e7e7\" />\n        </>\n    );\n};\n","import { gsap } from 'gsap'\nimport { TextPlugin } from 'gsap/TextPlugin'\nimport { useCallback } from 'react';\n\ntype Props = {\n    children: React.ReactNode;\n    onComplete?: Function;\n};\n\nexport const TextAnimation: React.VFC<Props> = ({ children, onComplete }) => {\n    const onCompleteCallback = useCallback(() => {\n        if (onComplete)\n            onComplete();\n    // eslint-disable-next-line react-hooks/exhaustive-deps      \n    }, []);\n\n    const setAnimation = (text: string) => {\n        gsap.registerPlugin(TextPlugin)\n        gsap.to(\".text\", {\n            duration: text.length * 0.07,\n            text: {\n                value: text,\n            },\n            ease: 'none',\n            onComplete: onCompleteCallback\n        });\n    };\n\n    const Ref = useCallback((node) => {\n        if (node !== null) {\n            node.style.width = node.clientWidth + \"px\";\n            node.style.height = node.clientHeight + \"px\";\n            setAnimation(node.innerHTML);\n            node.innerHTML = \"\";\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps      \n    }, []);\n\n    return <p ref={Ref} className=\"text\">{children}</p>;\n};\n","import { TextAnimation } from \"./TextAnimation\";\nimport { Center, Stack, Box, Link } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router\";\n\nexport const GameClear = () => {\n    const history = useHistory();\n\n    return (\n        <>\n            <Center h=\"100vh\">\n                <Stack>\n                    <Box fontFamily=\"'Kiwi Maru', serif\" fontSize=\"18px\" color=\"blue.900\">\n                        <TextAnimation>\n                            おめでとう。<br />\n                            君は我々の仲間になれる素質があるようだ。<br />\n                            URLをクリックしてから今までの君の行動は見せてもらった。<br />\n                            少々手荒ではあったが君の行動力や判断力を試させてもらったよ。<br />\n                            ゲームデータはすでに手元に戻っているはずだ。すまなかったな。<br />\n                            君なら優秀なエージェントになれるだろう。<br />\n                            おや、まさか君は未成年かい？<br />\n                            それならこちらからのお誘いはやめておこう。<br />\n                            君たちにはまだこの世界は厳しすぎる。<br />\n                            惜しいな。こんな人材を置いておくなんて。<br />\n                            まあいいだろう。仕方がない。<br />\n                            我々はいつ、どこにでも存在し、君たちを見ている。<br />\n                            また時が来たら尋ねるとしよう。<br />\n                            さらばだ諸君。\n                        </TextAnimation>\n                    </Box>\n                    <Link color=\"teal.500\" onClick={() => history.push(\"/epilogue\")} isExternal mt=\"1rem\" textAlign=\"right\">\n                        最後に ＞\n                    </Link>\n                </Stack>\n            </Center>\n            {/* PageLoginAdmin内なのでFooterが2重にならないよう、Footerを呼ばないように */}\n        </>\n    );\n};\n","import { useState } from \"react\";\nimport { MarketHeader } from \"../components/MarketHeader\";\nimport { MarketMain } from \"../components/MarketMain\";\nimport { GameClear } from \"../components/GameClear\";\n\n\nexport const PageRealAdmin: React.VFC = () => {\n    const [card_deleted, setCardDeleted] = useState(false);\n\n    return (\n        <>\n            { card_deleted ?\n                <GameClear />\n            :\n            <>\n                <MarketHeader height=\"6vh\" adminMode />\n                <MarketMain adminMode onClickDelete={() =>\n                    setCardDeleted(true)\n                } />\n            </>\n            }\n            {/* Footerが2重にならないよう、Footerを呼ばないように */}\n        </>\n    );\n};\n","import { Footer } from \"../components/Footer\";\nimport { Login } from \"../components/Login\";\nimport { PageRealAdmin } from \"./PageRealAdmin\";\n\nexport const PageRealLogin: React.VFC = () => {\n    return (\n        <>\n            <Login userName={[74, 97, 99, 107, 115, 111, 110]} password={[77, 105, 99, 104, 97, 101, 108]} onLoginComplete={() =>\n                <PageRealAdmin />\n            } />\n            <Footer height=\"15vh\" backgroundColor=\"#e7e7e7\" />\n        </>\n    );\n};\n","import { Box, Center, Link, Stack } from \"@chakra-ui/layout\";\nimport { useHistory } from \"react-router\";\nimport { Footer } from \"../components/Footer\";\nimport { TextAnimation } from \"../components/TextAnimation\";\n\nexport const PageStory: React.VFC = () => {\n    const history = useHistory();\n\n    return (\n        <>\n            <Center h=\"100vh\">\n                <Stack>\n                    <Box fontFamily=\"'Kiwi Maru', serif\" fontSize=\"18px\" color=\"blue.900\">\n                        <TextAnimation>\n                            事前登録をしようと思ったらゲームデータが盗まれてしまったようだ。<br />\n                            調べてみると、ゲームデータは闇マーケットで販売されてしまっている。<br />\n                            どうにか、この闇マーケットからゲームデータを取り返せないだろうか？\n                        </TextAnimation>\n                    </Box>\n                    <Link color=\"teal.500\" onClick={() => history.push(\"/market\")} isExternal mt=\"2rem\" textAlign=\"right\">\n                        ゲームスタート ＞\n                    </Link>\n                </Stack>\n            </Center>\n            <Footer height=\"15vh\" backgroundColor=\"#e7e7e7\" />\n        </>\n    );\n};\n","import { Box } from \"@chakra-ui/react\";\n\ntype Props = {\n    height: string;\n    imageUrl: string;\n};\n\nexport const Header: React.VFC<Props> = ({ height, imageUrl }) => {\n    return <Box h={height} bgImage={imageUrl} bgSize=\"cover\" />\n};\n","import { Button, Center, useToast, Stack, Container, Image } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const IndexMain: React.VFC = () => {\n    const toast = useToast();\n    const history = useHistory();\n    return (\n        <Container w=\"80%\" my={10}>\n            <Center>\n                <Stack spacing={10}>\n                    <Image src=\"https://unsplash.it/1000/600\" alt=\"\" />\n                    <Image src=\"https://unsplash.it/1000/400\" alt=\"\" />\n                    <Image src=\"https://unsplash.it/1000/200\" alt=\"\" />\n                    <Center>\n                        <Button\n                        m=\"1rem 0\"\n                        size=\"lg\"\n                        p=\"2rem\"\n                        variant=\"outline\"\n                        colorScheme=\"teal\"\n                        onClick={() => {\n                            toast({\n                                title: \"ゲームデータが盗まれた！\",\n                                status: \"error\",\n                                duration: 4000,\n                                isClosable: true,\n                                position: \"top\"\n                            });\n                            history.push(\"/story\");\n                        }}>事前登録</Button>\n                    </Center>\n                </Stack>\n            </Center>\n        </Container>\n    );\n};\n","import { Footer } from \"../components/Footer\";\nimport { Header } from \"../components/Header\";\nimport { IndexMain } from \"../components/IndexMain\";\n\nexport const PageIndex: React.VFC = () => {\n    return (\n        <>\n            <Header height=\"40vh\" imageUrl=\"https://unsplash.it/1000/500\" />\n            <IndexMain />\n            <Footer height=\"15vh\" backgroundColor=\"#e7e7e7\" />\n        </>\n    );\n};\n","export const PageEpilogue = () => {\n    return (\n        <p>作品者情報などのページ</p>\n    );\n};\n","import { Switch, Route } from \"react-router-dom\";\nimport { Page404 } from \"../pages/Page404\";\nimport { PageDummyLogin } from \"../pages/PageDummyLogin\";\nimport { PageMarket } from \"../pages/PageMarket\";\nimport { PageRealLogin } from \"../pages/PageRealLogin\";\nimport { PageStory } from \"../pages/PageStory\";\nimport { PageIndex } from \"../pages/PageIndex\";\nimport { PageEpilogue } from \"../pages/PageEpilogue\";\n\nexport const PageRoute: React.VFC = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={PageIndex} />\n            <Route path=\"/story\" component={PageStory} />\n            <Route path=\"/epilogue\" component={PageEpilogue} />\n            <Route path=\"/market\" render={({ match: { url } }) => (\n                <Switch>\n                    <Route exact path={url} component={PageMarket} />\n                    <Route path={`${url}/dummyadmin`} component={PageDummyLogin} />\n                    <Route path={`${url}/realadmin`} component={PageRealLogin} />\n                </Switch>\n            )} />\n            <Route component={Page404} />\n        </Switch>\n    );\n};\n","import \"./styles.css\";\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { HashRouter } from \"react-router-dom\";\nimport { PageRoute } from \"./route/PageRoute\";\n\nexport const App: React.VFC = () => {\n    return (\n        <HashRouter basename=\"/alfa_kobe_12A\">\n            <ChakraProvider>\n                <PageRoute />\n            </ChakraProvider>\n        </HashRouter>\n    );\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}